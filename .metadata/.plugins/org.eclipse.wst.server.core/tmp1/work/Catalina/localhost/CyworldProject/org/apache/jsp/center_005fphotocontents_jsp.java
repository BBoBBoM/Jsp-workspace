/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-25 05:15:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;

public final class center_005fphotocontents_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/dbconn.jsp", Long.valueOf(1684823473787L));
    _jspx_dependants.put("jar:file:/D:/JSP-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/CyworldProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/sql.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/JSP-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/CyworldProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1684473311329L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");

	Connection conn = null;	

	try {
		String url = "jdbc:mysql://localhost:3306/cyworld";
		String user = "root";
		String password = "1111";

		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(url, user, password);

	} catch (SQLException ex) {
		out.println("데이터베이스 연결이 실패되었습니다.<br>");
		out.println("SQLException: " + ex.getMessage());
	}
		

      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("UTF-8");
String user_id = (String) session.getAttribute("sessionId");
PreparedStatement pstmt;
List<String> photo_url = new ArrayList<>();
List<String> photo_contents = new ArrayList<>();
List<String> photo_date = new ArrayList<>();
try {
	String sql = "select * from photo where user_id=? order by photo_date DESC; ";
	pstmt = conn.prepareStatement(sql);
	pstmt.setString(1, user_id);
	ResultSet rs = pstmt.executeQuery();
	while (rs.next()) {
		String photo_url1 = rs.getString("photo_url");
		String photo_contents1 = rs.getString("photo_contents");
		String photo_date1 = rs.getString("photo_date");
		photo_url.add(photo_url1);
		photo_contents.add(photo_contents1);
		photo_date.add(photo_date1);
	}

} catch (SQLException e) {
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	margin: 0px;\r\n");
      out.write("	padding: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#center_photocontentsdiv {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	width: 685px;\r\n");
      out.write("	float: left;\r\n");
      out.write("	height: 680px;\r\n");
      out.write("	border: 1px solid rgb(109, 30, 255);\r\n");
      out.write("	margin-left: 13px;\r\n");
      out.write("	margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#center_photocontentsdiv1 {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	width: 650px;\r\n");
      out.write("	float: right;\r\n");
      out.write("	height: 630px;\r\n");
      out.write("	border: 1px solid rgb(70, 144, 241);\r\n");
      out.write("	margin-left: 13px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	word-wrap: break-word;\r\n");
      out.write("	overflow-y: scroll;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#center_photo_contents {\r\n");
      out.write("	width: 550px;\r\n");
      out.write("	height: 300px;\r\n");
      out.write("	border: 1px solid red;\r\n");
      out.write("	margin-left: 45px;\r\n");
      out.write("	margin-top: 130px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#wrap {\r\n");
      out.write("	width: 550px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("}\r\n");
      out.write(".center_photo_box{	width: 550px;\r\n");
      out.write("	height: 300px;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"center_photocontentsdiv\">\r\n");
      out.write("		<div id=\"center_photocontentsdiv1\">\r\n");
      out.write("			<div id=\"center_photo_calendar\">\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"center_photo_contents\">\r\n");
      out.write("\r\n");
      out.write("				");
if (!user_id.isEmpty()) {
				    for (int i =0; i<photo_date.size();i++) {
				        
      out.write("\r\n");
      out.write("				        <div class=\"center_photo_box\">\r\n");
      out.write("				        ");
      out.print(photo_date.get(i) );
      out.write("\r\n");
      out.write("				       <img alt=\"\" src=\"userprofileimg/");
      out.print(photo_url.get(i));
      out.write("\">\r\n");
      out.write("				            ");
      out.print( photo_contents.get(i) );
      out.write("\r\n");
      out.write("				        </div><br><br>\r\n");
      out.write("				        ");

				    }
				} else {
				    
      out.write("\r\n");
      out.write("				    <div class=\"center_photo_box\">사진이 없네요 업로드 해봐요 \r\n");
      out.write("				    </div>\r\n");
      out.write("				    ");

				}
		
				
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
